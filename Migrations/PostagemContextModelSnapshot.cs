// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Postagem.Context;

#nullable disable

namespace Postagem.Migrations
{
    [DbContext(typeof(PostagemContext))]
    partial class PostagemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Postagem.Models.Carta", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntregaId")
                        .HasColumnType("int");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntregaId");

                    b.ToTable("Cartas");
                });

            modelBuilder.Entity("Postagem.Models.Entrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCarta")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(1);

                    b.Property<int>("IdTerritorio")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCarta");

                    b.HasIndex("IdTerritorio");

                    b.ToTable("Entregas");
                });

            modelBuilder.Entity("Postagem.Models.Territorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntregaId")
                        .HasColumnType("int");

                    b.Property<string>("PontoReferencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntregaId");

                    b.ToTable("Territorios");
                });

            modelBuilder.Entity("Postagem.Models.Carta", b =>
                {
                    b.HasOne("Postagem.Models.Entrega", null)
                        .WithMany("CartasEntregues")
                        .HasForeignKey("EntregaId");
                });

            modelBuilder.Entity("Postagem.Models.Entrega", b =>
                {
                    b.HasOne("Postagem.Models.Carta", "Carta")
                        .WithMany()
                        .HasForeignKey("IdCarta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Postagem.Models.Territorio", "Territorio")
                        .WithMany()
                        .HasForeignKey("IdTerritorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carta");

                    b.Navigation("Territorio");
                });

            modelBuilder.Entity("Postagem.Models.Territorio", b =>
                {
                    b.HasOne("Postagem.Models.Entrega", null)
                        .WithMany("TerritoriosPercorrido")
                        .HasForeignKey("EntregaId");
                });

            modelBuilder.Entity("Postagem.Models.Entrega", b =>
                {
                    b.Navigation("CartasEntregues");

                    b.Navigation("TerritoriosPercorrido");
                });
#pragma warning restore 612, 618
        }
    }
}
